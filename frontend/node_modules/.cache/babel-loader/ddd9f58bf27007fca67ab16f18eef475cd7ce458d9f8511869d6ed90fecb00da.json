{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natan\\\\Documents\\\\mev\\\\mev_Estante_Virtual\\\\frontend\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [mensagem, setMensagem] = useState('');\n  const [conversa, setConversa] = useState([{\n    remetente: 'bot',\n    texto: 'Olá! Sou o assistente de recomendações de livros. Como posso ajudar você hoje?'\n  }]);\n  const [carregando, setCarregando] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [conversa]);\n  const enviarMensagem = async e => {\n    e.preventDefault();\n    if (!mensagem.trim()) return;\n    const novaConversa = [...conversa, {\n      remetente: 'user',\n      texto: mensagem\n    }];\n    setConversa(novaConversa);\n    setMensagem('');\n    setCarregando(true);\n    try {\n      const resp = await fetch('http://localhost:5000/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mensagem\n        })\n      });\n      const data = await resp.json();\n      setConversa(c => [...c, {\n        remetente: 'bot',\n        texto: data.resposta\n      }]);\n    } catch (err) {\n      setConversa(c => [...c, {\n        remetente: 'bot',\n        texto: 'Erro ao conectar com o assistente.'\n      }]);\n    }\n    setCarregando(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[500px] max-w-md w-full mx-auto border rounded-lg shadow-lg bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-2 bg-gray-50\",\n      children: [conversa.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.remetente === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg max-w-[80%] text-sm whitespace-pre-line ${msg.remetente === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: msg.texto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), carregando && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-2 rounded-lg bg-gray-200 text-gray-800 text-sm animate-pulse\",\n          children: \"Digitando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: enviarMensagem,\n      className: \"flex p-2 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 px-3 py-2 border rounded-l focus:outline-none focus:ring\",\n        placeholder: \"Digite sua mensagem...\",\n        value: mensagem,\n        onChange: e => setMensagem(e.target.value),\n        disabled: carregando\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-r hover:bg-blue-600 disabled:opacity-50\",\n        disabled: carregando || !mensagem.trim(),\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"ORXhnwof7Krg5pglE7q7rjeORvo=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","mensagem","setMensagem","conversa","setConversa","remetente","texto","carregando","setCarregando","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","enviarMensagem","e","preventDefault","trim","novaConversa","resp","fetch","method","headers","body","JSON","stringify","data","json","c","resposta","err","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/natan/Documents/mev/mev_Estante_Virtual/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Chatbot = () => {\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [conversa, setConversa] = useState([\r\n    { remetente: 'bot', texto: 'Olá! Sou o assistente de recomendações de livros. Como posso ajudar você hoje?' }\r\n  ]);\r\n  const [carregando, setCarregando] = useState(false);\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [conversa]);\r\n\r\n  const enviarMensagem = async (e) => {\r\n    e.preventDefault();\r\n    if (!mensagem.trim()) return;\r\n    const novaConversa = [...conversa, { remetente: 'user', texto: mensagem }];\r\n    setConversa(novaConversa);\r\n    setMensagem('');\r\n    setCarregando(true);\r\n    try {\r\n      const resp = await fetch('http://localhost:5000/api/chatbot', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ mensagem })\r\n      });\r\n      const data = await resp.json();\r\n      setConversa(c => [...c, { remetente: 'bot', texto: data.resposta }]);\r\n    } catch (err) {\r\n      setConversa(c => [...c, { remetente: 'bot', texto: 'Erro ao conectar com o assistente.' }]);\r\n    }\r\n    setCarregando(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[500px] max-w-md w-full mx-auto border rounded-lg shadow-lg bg-white\">\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-2 bg-gray-50\">\r\n        {conversa.map((msg, idx) => (\r\n          <div key={idx} className={`flex ${msg.remetente === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n            <div className={`px-4 py-2 rounded-lg max-w-[80%] text-sm whitespace-pre-line ${msg.remetente === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`}>{msg.texto}</div>\r\n          </div>\r\n        ))}\r\n        {carregando && (\r\n          <div className=\"flex justify-start\">\r\n            <div className=\"px-4 py-2 rounded-lg bg-gray-200 text-gray-800 text-sm animate-pulse\">Digitando...</div>\r\n          </div>\r\n        )}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n      <form onSubmit={enviarMensagem} className=\"flex p-2 border-t bg-white\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 px-3 py-2 border rounded-l focus:outline-none focus:ring\"\r\n          placeholder=\"Digite sua mensagem...\"\r\n          value={mensagem}\r\n          onChange={e => setMensagem(e.target.value)}\r\n          disabled={carregando}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-r hover:bg-blue-600 disabled:opacity-50\"\r\n          disabled={carregando || !mensagem.trim()}\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}